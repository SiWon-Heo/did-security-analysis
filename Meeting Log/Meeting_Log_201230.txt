NYM은 DID의 신원을 지칭
verinym은 법적 신원, pseudonym은 익명 신원

외부 관찰자가 할 수 있는 나쁜 짓

resolver가 나쁜 일을 할 수 있다
캐시도 그래서 TEE를 이용해서 아마 캐시를 구현해야 할 것 같아요
어택모델에서 많은 변화가 왔고
익명이 꼭 프라이버시를 보장하는 것은 아니다
정말로 프라이버시를 존중하는 서비스를 만들기 위해서는 universal resolver도 이런 구조를 가져야 한다

기존 소스코드 분석해봤더니 이런이런 문제가 있었다
실험이라기보다는 분석이죠

그때 도커 시큐리티 해서 그런거 해서 취약점이 있을 것 같다고 하셨는데
다른 논문 찾아서 인용해서 이런이런 문제가 있지 않을까? 어떤 프로토콜이 필요하면 괜찮을거다라고 쓰면 되나요?
malicious 디바이스 드라이버 attack -> 제 드라이버를 등록한다면 몰래 데이터수집하는 것도 넣고싶을 것 같다!
생각을 좀 해봤는데 universal resolver가 기술적으로는 필요할 이유는 없다
결국 데이터를 기업이 원하는건데 프라이버시가 이부분에서 중요할 수 있다

sgx 되는 서버를 만들어야 겠네요..
개발이 순조로울지는 모르겠네요

sgx 디자인에 대해 설명해봤는데 uni resolver 일부라던가 넣으려다보면 굉장히 구현이 어려워질 것 같거든요..
(해시맵)key-value store같은 거를 sgx에 넣은 다음에
DID 뺴고 다 넣은 다음에 sgx에 넣고 DID만 채워서 보내준다
캐시 관련해서도 DID가 뭔지는 모르지만 각 캐시 엔트리에 대해 unique한 값을 갖고 있고 그걸로 retrieve를 한다던지

